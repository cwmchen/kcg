package ${project}.${module}.api.controller;

import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import fhafw.framework.annotation.Operation;
import fhafw.framework.annotation.Operations;
import fhafw.framework.controller.IBaseController;
import fhafw.framework.mapping.Page;
import fhafw.framework.mapping.PageBean;
import ${project}.${module}.api.feign.Feign${className}Service;
import ${project}.${module}.pojo.entity.${className};

/**
 * ${tableComment} api
 */
@RestController
@RequestMapping("/${className?uncap_first}")
@Operations({ @Operation(name = "${tableComment}列表", code = "${className}Controller.get${className}ForPage", invokeMethod = "get${className}ForPage"),
              @Operation(name = "新增", code = "${className}Controller.save${className}", invokeMethod = "save${className}"),
              @Operation(name = "删除", code = "${className}Controller.remove${className}", invokeMethod = "remove${className}"),
              @Operation(name = "修改", code = "${className}Controller.update${className}", invokeMethod = "update${className}"),
              @Operation(name = "查看", code = "${className}Controller.get${className}", invokeMethod = "get${className}") })
public class ${className}Controller implements IBaseController {

    @javax.annotation.Resource(name = Feign${className}Service.DEFAULT_SERVICE_NAME)
    private Feign${className}Service feign${className}Service;

    @PostMapping("/save")
    public ResponseEntity<${className}> save${className}(@RequestBody ${className} ${className?uncap_first}) {
        return ResponseEntity.ok(feign${className}Service.save${className}(${className?uncap_first}));
    }

    @DeleteMapping("/{<#list columns as column><#list primaryKeys as primaryKey><#if primaryKey.columnName?lower_case == column.columnName?lower_case>${column.fieldName}</#if></#list></#list>}")
    public ResponseEntity<${className}> remove${className}(@PathVariable String <#list columns as column><#list primaryKeys as primaryKey><#if primaryKey.columnName?lower_case == column.columnName?lower_case>${column.fieldName}</#if></#list></#list>) {
        return ResponseEntity.ok(feign${className}Service.remove${className}(<#list columns as column><#list primaryKeys as primaryKey><#if primaryKey.columnName?lower_case == column.columnName?lower_case>${column.fieldName}</#if></#list></#list>));
    }

    @PostMapping("/update")
    public ResponseEntity<${className}> update${className}(@RequestBody ${className} ${className?uncap_first}) {
        return ResponseEntity.ok(feign${className}Service.update${className}(${className?uncap_first}));
    }

    @GetMapping("/{<#list columns as column><#list primaryKeys as primaryKey><#if primaryKey.columnName?lower_case == column.columnName?lower_case>${column.fieldName}</#if></#list></#list>}")
    public ResponseEntity<${className}> get${className}(@PathVariable String <#list columns as column><#list primaryKeys as primaryKey><#if primaryKey.columnName?lower_case == column.columnName?lower_case>${column.fieldName}</#if></#list></#list>) {
        return ResponseEntity.ok(feign${className}Service.get${className}(<#list columns as column><#list primaryKeys as primaryKey><#if primaryKey.columnName?lower_case == column.columnName?lower_case>${column.fieldName}</#if></#list></#list>));
    }

    @PostMapping("/page")
    public ResponseEntity<Page<${className}>> get${className}ForPage(@RequestBody PageBean pageBean) {
        return ResponseEntity.ok(feign${className}Service.get${className}ForPage(pageBean));
    }
}
